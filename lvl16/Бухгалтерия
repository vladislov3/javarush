package com.javarush.task.pro.task12.task1209;

import java.util.ArrayList;
import java.util.Arrays;

/* 
Бухгалтерия
*/

public class Solution {
    public static ArrayList<String> waitingEmployees = new ArrayList<>();
    public static ArrayList<String> alreadyGotSalaryEmployees = new ArrayList<>();

    public static void initEmployees() {
        waitingEmployees.add("Гвинно");
        waitingEmployees.add("Гунигерд");
        waitingEmployees.add("Боргелейф");
        waitingEmployees.add("Нифрод");
        waitingEmployees.add("Альбиуф");
        waitingEmployees.add("Иногрим");
        waitingEmployees.add("Фриле");
    }

    public static int count = 0;

    public static void main(String[] args) {

        initEmployees();
//        for (int i = 0; i < waitingEmployees.size(); i++) {
//            paySalary(waitingEmployees.get(i));
//        }
//
//        for (int i = 0; i < waitingEmployees.size(); i++) {
//            System.out.println(waitingEmployees.get(i));
//        }
//        System.out.println("_____________________");
//        for (int i = 0; i < alreadyGotSalaryEmployees.size(); i++) {
//            System.out.println(alreadyGotSalaryEmployees.get(i));
//        }


    }

    public static void paySalary(String name) {

        if (waitingEmployees.get(count) == null || !(waitingEmployees.contains(name))) {

        } else if (alreadyGotSalaryEmployees.contains(waitingEmployees.get(count))) { // Есть ли в списке получивших з.п рабочий из списка ждущих зп
            waitingEmployees.set(count, null); // Если да, то удаляем из ждущих
            count++;
        } else {
            alreadyGotSalaryEmployees.add(name);
            waitingEmployees.set(count, null);
            count++;
        }

    }
}
